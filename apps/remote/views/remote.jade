doctype 5
html(lang="en")
	head
		title MediacenterJS
		meta(name="mobile-web-app-capable" content="yes")
		meta(name="HandheldFriendly" content="true")
		meta(name="viewport" content="width=device-width initial-scale=1, maximum-scale=1, user-scalable=no")
		// Core inclusion
		link(rel='stylesheet', href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Open+Sans')
		link(rel='stylesheet', href='/core/css/style.css')
		link(rel='stylesheet', href='/themes/'+selectedTheme)
		link(rel='stylesheet', href='/remote/css/icon.css')
		link(rel='stylesheet', href='/remote/css/style.css')
				
		script(src="/core/js/jquery-1.8.2.min.js")
		script(src="/core/js/plugins/jquery.prettyForm.js")	
		script(src="/core/js/socket.io.min.js")

		script.
			$(function(){
			
				var viewPortHeight = $(window).height();
				$('#settings').height(viewPortHeight - 20);
			
				setTimeout(function(){
					window.scrollTo(0, 1);
				}, 10);
				
				$('i.ellipsis.vertical.icon.settings').on('click', function(){
					$('#settings').toggleClass('show');
				});
				
				$('#main').on('click', function(){
					if($('#settings').hasClass('show')) $('#settings').removeClass('show');
				});
				
				$('.status').text('Remote not connected')
				
				$.ajax({
						url: '/configuration/', 
						type: 'get'
					}).done(function(data){
						var socket = io.connect(data.localIP+':'+data.remotePort);
						
						socket.on('connect', function(data){
							socket.emit('remote');

							$('.status').text('Remote connected')
							
							$(".left.link").on('click',function(){
								socket.emit('control',{action:"goLeft"}); 
							});

							$(".right.link").on('click',function(){
								socket.emit('control',{action:"goRight"}); 
							});
							
							$(".enter").on('click',function(){
								socket.emit('control',{action:"enter"}); 
							});
							
							$(".back").on('click',function(){
								socket.emit('control',{action:"back"}); 
							});		

							$(".play").on('click',function(){
								socket.emit('control',{action:"play"}); 
							});	

							$(".pause").on('click',function(){
								socket.emit('control',{action:"pause"}); 
							});	

							$(".stop").on('click',function(){
								socket.emit('control',{action:"stop"}); 
							});		

							$(".fullscreen").on('click',function(){
								socket.emit('control',{action:"fullscreen"}); 
							});			

							socket.on("loading", function(data){
								console.log(data);
							});  
						});
					});
			});

	body#remote	
		#settings.hide
			form#setup.validate-form(action='/submitRemote',method='post')
				.row
					label #{lingua.setting_movielocation}
					input.keyboard(name="moviepath",type="text",placeholder="C:/temp/ or /mnt/media/hdd/movies/", value= movielocation, data-rule-required="true", data-rule-path="true",  data-msg-path="Specify a valid path. Please end with a slash.")
				.row
					label #{lingua.setting_musiclocation}
					input.keyboard(name="musicpath",type="text",placeholder="C:/temp/ or /mnt/media/hdd/music/", value= musiclocation, data-rule-required="true", data-rule-path="true",  data-msg-path="Specify a valid path. Please end with a slash.")
				.row
					label #{lingua.setting_tvlocation}
					input.keyboard(name="tvpath",type="text",placeholder="C:/temp/ or /mnt/media/hdd/movies/", value= tvlocation, data-rule-required="true", data-rule-path="true",  data-msg-path="Specify a valid path. Please end with a slash.")
				.row
					span.label #{lingua.setting_screensaver}
					.checkgroup
						- if(screensaver === 'dim')
							input#dimYes(name="screensaver",type="radio",value="dim",checked) 
							label(for="dimYes") #{lingua.setting_yes}
							input#dimNo(name="screensaver",type="radio",value="off") 
							label(for="dimNo") #{lingua.setting_no}
						- else 
							input#dimYes(name="screensaver",type="radio",value="dim") 
							label(for="dimYes") #{lingua.setting_yes}
							input#dimNo(name="screensaver",type="radio",value="off",checked) 
							label(for="dimNo") #{lingua.setting_no}
				.row
					label #{lingua.setting_language}
					select#language(name="language")
						- for lang in availableLanguages
							option(value=lang, selected=lang == language) #{lang}
				.row
					label Local IP (for Remote)
					input.keyboard(name="localIP",type="text",placeholder="localhost", value= localIP)	
				.row
					label Remote port (specific port for Remote)
					input.keyboard(name="remotePort",type="text",placeholder="3001", value= remotePort)	
				.row
					label #{lingua.setting_location}
					input.keyboard(name="location",type="text",placeholder="ie london or amsterdam", value= location,data-rule-required="true")					
				.row
					label Spotify Username
					input.keyboard(name="spotifyUser",type="text", value=spotifyUser)					
				.row
					label Spotify Password
					input.keyboard(name="spotifyPass",type="password", value=spotifyPass)	
				.row
					label #{lingua.setting_theme}
					select#theme(name="theme")
						- for theme in themes
							option(selected=theme) #{theme}
				.row
					label #{lingua.setting_port}
					input.keyboard(name="port",type="text",placeholder="ie 3000 or 1337", value= port ,data-rule-required="true")
				.row
					input(type="submit",value="#{lingua.setting_submit}")	
					input#nokeyboard(name="usekeyboard",type="hidden",value=onscreenkeyboard) 
		
		i.ellipsis.vertical.icon.settings
		#main
			#color-wrapper
				h1 MediacenterJS
					span remote
				.push
				#remote-wrapper
					.back 
						i.reply.mail.icon
					.left.link
						i.left.arrow.icon
					.enter
						i.play.sign.icon
					.right.link
						i.right.arrow.icon
					.pause
						i.pause.icon
			#plain-wrapper

				.fullscreen.button 
					i.fullscreen.icon
				
				.mute.button 
					i.mute.icon
				.shuffle.button 
					i.shuffle.icon
			
			.status
