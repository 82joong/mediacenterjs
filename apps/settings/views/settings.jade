extends /layout

block declarations
    - additional_title = 'Settings'; //- TODO: Translate this
    - include_validation = true;

block additional_css
    link(rel='stylesheet', href='/settings/css/style.css')

block additional_scripts
    script(src='/core/js/oauth.min.js')
    script.
        $(function() {
            $('body').mcjs();

            $('.parentalControl').on('click', function(e){
                e.preventDefault();
                var that = $(this);
                var clientIDField =  that.parent().parent().find('.device').text();

                if(that.hasClass('lock')){
                    var url  = '/lockClient';
                } else if(that.hasClass('unlock')){
                    var url  = '/unlockClient';
                }

                $.ajax({
                    url: url,
                    type: 'post',
                    data: clientIDField
                }).done(function(data){
                    if(data === 'done'){
                        setTimeout(function(){
                            location.reload();
                        },2000);
                    }
                });


            });

        });

    script(src="/settings/js/jquery.mcjs.settings.js")

block body
    #header.settings
        a.backlink(href="/")
            img(src="/core/icons/back.png")
        h1  #{lingua.settings}
    #wrapper
        .ui-widget
            .message
                .message
        #settings
            input.oauthKeyHidden(name="oauthKey" type="hidden")
            form#setup.validate-form(action='/submit',method='post')
                h2 MediacenterJS general settings
                div#oauthContainer.mcjs-rc-controllable.row
                    span.info
                        span.quote &ldquo;
                        span Securely connect to your Google account using oAuth to use the YouTube app. Logging in will enable you to view your personal content. <br/> After logging in using oAuth, press 'submit' to save and continue.
                        span.quote &rdquo;
                    input#oauthKey.mcjs-rc-clickable(name="oauthKey" type="hidden", placeholder="OAuth.io Key", value="")
                    a.btn#oauth(href="#") Register OAuth
                    label(for="oauthKey")
                .row.wrap.mcjs-rc-controllable
                    a.btn.cachelink.mcjs-rc-clickable(data-cachelink="movies") #{lingua.settings_clear_cache_movies}
                .row.wrap.mcjs-rc-controllable
                    a.btn.cachelink.mcjs-rc-clickable(data-cachelink="music") #{lingua.settings_clear_cache_music}
                .row.wrap.mcjs-rc-controllable
                    a.btn.cachelink.mcjs-rc-clickable(data-cachelink="tvepisodes") #{lingua.settings_clear_cache_tv}
                .row.wrap.mcjs-rc-controllable
                    a.btn.cachelink.mcjs-rc-clickable(data-cachelink="tvshows") #{lingua.settings_clear_cache_tv}
                .row.wrap.mcjs-rc-controllable
                    a.btn.cachelink.mcjs-rc-clickable(data-cachelink="devices") Clear device cache
                .row.mcjs-rc-controllable
                    label(for="moviepath") #{lingua.setting_movielocation}
                    input#moviepath.mcjs-rc-clickable(name="moviepath",type="text",placeholder="C:/temp/ or /mnt/media/hdd/movies/", value= movielocation,  data-rule-path="true",  data-msg-path="Specify a valid path. <br/>Please end with a slash and use forward slashes.")
                .row.mcjs-rc-controllable
                    label(for="musicpath") #{lingua.setting_musiclocation}
                    input#musicpath.mcjs-rc-clickable(name="musicpath",type="text",placeholder="C:/temp/ or /mnt/media/hdd/music/", value= musiclocation,  data-rule-path="true",  data-msg-path="Specify a valid path. <br/>Please end with a slash and use forward slashes.")
                .row.mcjs-rc-controllable
                    label(for="tvpath") #{lingua.setting_tvlocation}
                    input#tvpath.mcjs-rc-clickable(name="tvpath",type="text",placeholder="C:/temp/ or /mnt/media/hdd/movies/", value= tvlocation, data-rule-path="true",  data-msg-path="Specify a valid path. <br/>Please end with a slash and use forward slashes.")
                .row.mcjs-rc-controllable
                    label(for="language") #{lingua.setting_language}
                    select#language.mcjs-rc-clickable(name="language")
                        - for lang in availableLanguages
                            option(value=lang, selected=lang == language) #{lang}
                .row.mcjs-rc-controllable
                    label(for="location") #{lingua.setting_location}
                    input#location.mcjs-rc-clickable(name="location",type="text",placeholder="ie london or amsterdam", value= location,data-rule-required="true", data-msg-required="This field is required.")
                if spotifyUser !== ""
                    .row.mcjs-rc-controllable
                        label(for="spotifyUser") Spotify Username
                        input#spotifyUser.mcjs-rc-clickable(name="spotifyUser",type="text", value=spotifyUser)
                if spotifyPass !== ""
                    .row.mcjs-rc-controllable
                        label(for="spotifyPass") Spotify Password
                        input#spotifyPass.mcjs-rc-clickable(name="spotifyPass",type="password", value=spotifyPass)
                .row.mcjs-rc-controllable
                    label(for="theme") #{lingua.setting_theme}
                    select#theme.mcjs-rc-clickable(name="theme")
                        - for theme in themes
                            option(selected=theme) #{theme}
                .row.mcjs-rc-controllable
                    label(for="port") #{lingua.setting_port}
                    input#port.mcjs-rc-clickable(name="port",type="text",placeholder="ie 3000 or 1337", value= port ,data-rule-required="true", data-msg-required="This field is required.")
                .row.wrap.mcjs-rc-controllable
                    br
                    -if(allowed === 'yes' && devices !== undefined)
                        strong Connected devices:
                        table
                            thead
                                tr
                                    th Device ID
                                    th Last seen
                                    th Is allowed
                                    th Parental lock
                            tbody
                                - each device in devices
                                    tr.mcjs-rc-controllable
                                        td.device= device.device_id
                                        td.seen= device.last_seen
                                        td.active= device.is_active
                                        td
                                            -if (device.is_active !== undefined && device.is_active === 'yes')
                                                a.parentalControl.btn.mcjs-rc-clickable.lock Lock this device
                                            -else
                                                a.parentalControl.btn.mcjs-rc-clickable.unlock UnLock this device
                .row.mcjs-rc-controllable
                            input.mcjs-rc-clickable(type="submit",value="#{lingua.setting_submit}")
                            input(type="hidden",name="screensaver",value="dim")
                            input.oauth(name="oauth" type="hidden")
